<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0416.1335                               -->
<workbook original-version='18.1' source-build='2018.1.0 (20181.18.0416.1335)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Customers+ (KinetEco Orders)' inline='true' name='federated.1n6tikg1ntlfw31edow260bh628m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='KinetEco Orders' name='excel-direct.1s66xw70e2bby21bvaykx0untyn5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Curt/Desktop/Exercise Files/Chapter09/KinetEco Orders.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[SKU]' />
              <expression op='[Products].[SKU]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Customers].[CustNum]' />
                <expression op='[Orders].[CustNum]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1s66xw70e2bby21bvaykx0untyn5' name='Customers' table='[Customers$]' type='table'>
              <columns gridOrigin='A2:I102:no:A2:I102:0' header='yes' outcome='2'>
                <column datatype='integer' name='CustNum' ordinal='0' />
                <column datatype='string' name='CustFirstName' ordinal='1' />
                <column datatype='string' name='CustLastName' ordinal='2' />
                <column datatype='string' name='CustFullName' ordinal='3' />
                <column datatype='string' name='Phone' ordinal='4' />
                <column datatype='string' name='Address' ordinal='5' />
                <column datatype='string' name='City' ordinal='6' />
                <column datatype='string' name='State' ordinal='7' />
                <column datatype='integer' name='ZIPCode' ordinal='8' />
              </columns>
            </relation>
            <relation connection='excel-direct.1s66xw70e2bby21bvaykx0untyn5' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:E275:no:A1:E275:0' header='yes' outcome='6'>
                <column datatype='integer' name='OrderNum' ordinal='0' />
                <column datatype='integer' name='CustNum' ordinal='1' />
                <column datatype='date' name='Date of Purchase' ordinal='2' />
                <column datatype='string' name='SKU' ordinal='3' />
                <column datatype='integer' name='Quantity' ordinal='4' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1s66xw70e2bby21bvaykx0untyn5' name='Products' table='[Products$]' type='table'>
            <columns gridOrigin='A1:D53:no:A1:D53:0' header='yes' outcome='6'>
              <column datatype='string' name='SKU' ordinal='0' />
              <column datatype='string' name='ProductCategory' ordinal='1' />
              <column datatype='string' name='ProductName' ordinal='2' />
              <column datatype='real' name='Price' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Address]' value='[Customers].[Address]' />
          <map key='[City]' value='[Customers].[City]' />
          <map key='[CustFirstName]' value='[Customers].[CustFirstName]' />
          <map key='[CustFullName]' value='[Customers].[CustFullName]' />
          <map key='[CustLastName]' value='[Customers].[CustLastName]' />
          <map key='[CustNum (Orders)]' value='[Orders].[CustNum]' />
          <map key='[CustNum]' value='[Customers].[CustNum]' />
          <map key='[Date of Purchase]' value='[Orders].[Date of Purchase]' />
          <map key='[OrderNum]' value='[Orders].[OrderNum]' />
          <map key='[Phone]' value='[Customers].[Phone]' />
          <map key='[Price]' value='[Products].[Price]' />
          <map key='[ProductCategory]' value='[Products].[ProductCategory]' />
          <map key='[ProductName]' value='[Products].[ProductName]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[SKU (Products)]' value='[Products].[SKU]' />
          <map key='[SKU]' value='[Orders].[SKU]' />
          <map key='[State]' value='[Customers].[State]' />
          <map key='[ZIPCode]' value='[Customers].[ZIPCode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CustNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustNum]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CustNum</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustFirstName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustFirstName]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CustFirstName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustLastName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustLastName]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CustLastName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustFullName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustFullName]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CustFullName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Phone]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>Phone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIPCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIPCode]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>ZIPCode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Customers]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:I102:no:A2:I102:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OrderNum]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>OrderNum</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustNum (Orders)]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>CustNum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Purchase</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date of Purchase]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Date of Purchase</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SKU</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SKU]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>SKU</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E275:no:A1:E275:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SKU</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SKU (Products)]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>SKU</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductCategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProductCategory]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>ProductCategory</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProductName]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>ProductName</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Products]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D53:no:A1:D53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TotalPrice' datatype='real' name='[Calculation_774056250941591552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Quantity]*[Price]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Cust First Name' datatype='string' name='[CustFirstName]' role='dimension' type='nominal' />
      <column caption='Cust Full Name' datatype='string' name='[CustFullName]' role='dimension' type='nominal' />
      <column caption='Cust Last Name' datatype='string' name='[CustLastName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[CustNum (Orders)]' role='dimension' type='ordinal' />
      <column caption='Cust Num' datatype='integer' name='[CustNum]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order Num' datatype='integer' name='[OrderNum]' role='dimension' type='ordinal' />
      <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[ProductName]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='ZIP Code' datatype='integer' default-format='*00000' name='[ZIPCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.867089' measure-ordering='alphabetic' measure-percentage='0.132911' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Customers+ (KinetEco Orders)' name='federated.1n6tikg1ntlfw31edow260bh628m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1n6tikg1ntlfw31edow260bh628m'>
            <column caption='TotalPrice' datatype='real' name='[Calculation_774056250941591552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Quantity]*[Price]' />
            </column>
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_774056250941591552]' derivation='Sum' name='[sum:Calculation_774056250941591552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n6tikg1ntlfw31edow260bh628m].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter from='&quot;California&quot;' function='range' level='[none:State:nk]' to='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1n6tikg1ntlfw31edow260bh628m].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1n6tikg1ntlfw31edow260bh628m].[Longitude (generated)]' field-type='quantitative' max='-7633481.4802703597' min='-13741520.026318338' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1n6tikg1ntlfw31edow260bh628m].[Latitude (generated)]' field-type='quantitative' max='6242326.0143965166' min='3067526.3181455904' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1n6tikg1ntlfw31edow260bh628m].[sum:Calculation_774056250941591552:qk]' />
              <lod column='[federated.1n6tikg1ntlfw31edow260bh628m].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1n6tikg1ntlfw31edow260bh628m].[Latitude (generated)]</rows>
        <cols>[federated.1n6tikg1ntlfw31edow260bh628m].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n6tikg1ntlfw31edow260bh628m].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
